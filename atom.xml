<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://aonther1.github.io</id>
    <title>Aonther</title>
    <updated>2020-07-28T01:11:34.650Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://aonther1.github.io"/>
    <link rel="self" href="https://aonther1.github.io/atom.xml"/>
    <subtitle>且放白鹿青崖间 须行即骑访名山 </subtitle>
    <logo>https://aonther1.github.io/images/avatar.png</logo>
    <icon>https://aonther1.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Aonther</rights>
    <entry>
        <title type="html"><![CDATA[简单聊聊前后端分离开发]]></title>
        <id>https://aonther1.github.io/post/spring-bootvue-qian-hou-duan-fen-chi-kai-fa/</id>
        <link href="https://aonther1.github.io/post/spring-bootvue-qian-hou-duan-fen-chi-kai-fa/">
        </link>
        <updated>2020-07-27T12:29:11.000Z</updated>
        <content type="html"><![CDATA[<p>目录<br>
<ul class="markdownIt-TOC">
<li><a href="#1%E4%BB%80%E4%B9%88%E6%98%AF%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB">1.什么是前后端分离？</a></li>
<li><a href="#2%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB">2.为什么要使用前后端分离？</a></li>
<li><a href="#3%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB">3.如何实现前后端分离？</a></li>
<li><a href="#4%E6%80%BB%E7%BB%93%E8%A6%81%E7%82%B9">4.总结要点：</a></li>
</ul>
</p>
<h1 id="1什么是前后端分离">1.什么是前后端分离？</h1>
<p>  前后端分离：通俗的来说就是将一个应用的前端代码和后段代码分开来写<br/></p>
<h1 id="2为什么要使用前后端分离">2.为什么要使用前后端分离？</h1>
<p>  因为传统的Java Web 开发中，首先由前端完成html静态页面然后交给后端，后端转成jsp。<br/><br>
  当出现问题时后端开发者会找前端开发者沟通，但此时前端开发者交与后端开发者的html静态页面已经是jsp页面了。前端开发者看到已经不是自己之前写的html静态页面了，里面混合很多标签、表达式等等。此时两人肯定会出现沟通问题，以至于开发效率变低。而且后端开发者需要等待前端开发者完成html静态页面之后再整合成jsp，出错概率比较大，出现bug也不好解决。耦合度太高，所以才出现前后端分离来解决这个问题。<br/><br>
  使用前后端分离的方式，分开时前端只需要独立编写客户端代码，后端也只需要独立编写服务端代码提供数据接口。<br/><br>
  前端通过Ajax请求访问后端的数据接口，将Model展示到VIew中。<br/><br>
  前端开发者需要和后端开发者提前约定好接口文档（URL、参数、数据类型...）,然后分别独立开发即可。<br/><br>
  如果前端一些页面需要后端的数据前端开发者可以通过造假数据进行测试。不需要依赖与后端。<br/><br>
  后端开发者只需要考虑数据是否真实有效，不需要考虑前端怎么展示。<br/></p>
<h1 id="3如何实现前后端分离">3.如何实现前后端分离？</h1>
<p>  现在最主流的实现前后端分离的技术是 Spring Boot + Vue；<br>
  使用Spring Boot进行后端应用开发；<br>
  使用Vue进行前端应用开发；<br>
  当然实现前后端分离方式有很多种，只要前后端独立编写，并能实现数据交互如利用ajax与nodejs服务器（中间层)交互。<br/></p>
<h1 id="4总结要点">4.总结要点：</h1>
<p>  前后端分离相当于将一个单体应用拆分成了一个前端应用和一个后端应用。实现了前后端的解耦合，可极大的提升效率。<br>
  前端负责：数据展示和用户交互。<br>
  后端负责；数据处理接口。<br>
  前端HTML通过Ajax去调用基于RESTful后端数据接口（后端开发方式有很多选择）。<br>
用JSON格式进行数据交互。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[balabala影视详情介绍]]></title>
        <id>https://aonther1.github.io/post/balabala-ying-shi-xiang-qing-jie-shao/</id>
        <link href="https://aonther1.github.io/post/balabala-ying-shi-xiang-qing-jie-shao/">
        </link>
        <updated>2020-07-18T08:11:34.000Z</updated>
        <content type="html"><![CDATA[<p>注明 ：这篇文章主要介绍一下我在balabala影视中所编写的代码或参与实现的功能，因项目上云出现一些问题，所以项目地址会在后续文章更新时写入🤝<br>
<font color='#000000'><strong>前台页面详情</strong><br>
1.首页</font><br>
<img src="https://aonther1.github.io/post-images/1595065454903.png" alt="" loading="lazy"><br>
  <font color='#000000'>前台页面主要是自写的css样式，和用jQuery写的一个简单的轮播<br>
  由于是用ssm框架编写的后台代码所以有关影片的信息是在controller层里查询到，添加到list集合里再通过model传到页面中去。具体代码如下：</font><br>
<img src="https://aonther1.github.io/post-images/1595061089559.png" alt="" loading="lazy"><br>
<font color='#000000'>2.播放页</font><br>
<img src="https://aonther1.github.io/post-images/1595061423315.png" alt="" loading="lazy"><br>
  <font color='#000000'>在首页点击想要播放的视频会自动跳转到播放页，如果视频是由多集组成是会默认播放第一集。点开controller层代码：</font><img src="https://aonther1.github.io/post-images/1595062694663.png" alt="" loading="lazy"><br>
  <font color='#000000'>可以看到我标红的两个参数，其中Integer id 是视频id，但因为有的视频是由多集组成的，但播放页只能一次播放其中一集所以有了第二个参数String vd剧集id。在首页点击想要播放的视频时会传入这两个参数。</font><br/><br>
  <font color='#000000'>其中Integer id 是点击的视频的id而参数String vd会默认传入1，所以播放页播放的是所点击视频下的第一集。而同一视频下的换级换集功能是由以下代码实现的：</font><br>
<img src="https://aonther1.github.io/post-images/1595063379707.png" alt="" loading="lazy"><br>
  <font color='#000000'>list2.duration是此视频的总集数，而list1.ename是现在所播放的集数，通过c:forEach把list2.duration总集数作为循环长度x为参数x==list1.ename修改此按钮的class样式实现的集数列表：</font><img src="https://aonther1.github.io/post-images/1595063719850.png" alt="" loading="lazy"><br>
  <font color='#000000'>此时点击具体集数按钮在后台会将x作为controller层String vd参数，而因为后台循环中的x就是具体集数所以点击后播放页就会播放相应集数从而实现同一视频下的换级换集功能。</font><br>
  <font color='#000000'>至于播放器是用DPlayer框架去编写的DPlayer 是一个支持弹幕的 html5 视频播放器。支持 Bilibili 视频和 danmaku，实时视频（HTTP Live Streaming，M3U8格式）以及 FLV 格式。 我们小组在从DPlayer的官方使用文档学习如何使用之后，更改其具体参数实现了播放功能。<br>
相关代码如下：</font><img src="https://aonther1.github.io/post-images/1595064311012.png" alt="" loading="lazy"><br>
注明 ：由于登录注册功能主要不是由我负责制作的所以在此就不详细介绍了。<br>
<font color='#000000'><strong>后台页面详情</strong></font><br>
<font color='#000000'>1.列表页面</font><br>
<img src="https://aonther1.github.io/post-images/1595065980585.png" alt="" loading="lazy"><br>
<font color='#000000'>  后台页面主要是通过bootstrap框架去写的前端代码，页面数据同样是同过ssm框架从数据库中获得的，同时为了实现分页换页功能后端代码如下：</font><br>
<img src="https://aonther1.github.io/post-images/1595067207777.png" alt="" loading="lazy"><br>
<font color='#000000'>2.增删改查</font><br>
<font color='#0000'>  删除十分简单只要传入具体行数id就可以实现删除功能。</font><br/><br>
<font color='#0000'>  增改的页面用bootstrap中的modal框代替了由于增改框几乎没有差别,所以这里只展示修改框，点击编辑按钮会弹出以下窗口：</font><br>
<img src="https://aonther1.github.io/post-images/1595067664400.png" alt="" loading="lazy"><br>
<font color='#0000'>  框中数据主要是通过jQuery传入的：</font><br>
<img src="https://aonther1.github.io/post-images/1595067777306.png" alt="" loading="lazy"><br>
<font color='#0000'>  编辑完成后点击提交即可完成修改，controller层代码如下：</font><br>
<img src="https://aonther1.github.io/post-images/1595067984199.png" alt="" loading="lazy"><br>
<font color='#0000'>  查寻功能的实现主要是在下拉框选择自己要查哪一列再输入关键字：</font><br>
<img src="https://aonther1.github.io/post-images/1595068302864.png" alt="" loading="lazy"><br>
<font color='#0000'>  将下拉框所选数据和关键字传入controller层调用service层的selectCha()方法:</font><br>
<img src="https://aonther1.github.io/post-images/1595068507460.png" alt="" loading="lazy"><br>
<font color='#0000'>  String a,String b分别对应下拉框所选数据和关键字，dao层sql语句如下：</font><br>
<img src="https://aonther1.github.io/post-images/1595068728295.png" alt="" loading="lazy"><br>
<font color='#0000'>  String a,String b对应a，b。</font></p>
<p>自此已经介绍完我在balabala影视所负责的所有模块🥂。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://aonther1.github.io/post/hello-gridea/</id>
        <link href="https://aonther1.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>